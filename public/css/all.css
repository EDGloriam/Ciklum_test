html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

ol,
ul {
  list-style: none;
}

body {
  min-width: 320px;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@-webkit-keyframes appearingLeft {
  0% {
    left: -15px;
    opacity: 0.7;
  }

  100% {
    left: 0;
    opacity: 1;
  }
}

@keyframes appearingLeft {
  0% {
    left: -15px;
    opacity: 0.7;
  }

  100% {
    left: 0;
    opacity: 1;
  }
}

@-webkit-keyframes appearingRight {
  0% {
    right: -15px;
    opacity: 0.7;
  }

  100% {
    right: 0;
    opacity: 1;
  }
}

@keyframes appearingRight {
  0% {
    right: -15px;
    opacity: 0.7;
  }

  100% {
    right: 0;
    opacity: 1;
  }
}

#slider {
  padding-top: 10px;
  width: 70%;
  height: auto;
  margin: auto;
}

#slider .slider-container {
  position: relative;
}

#slider .slider-body {
  overflow: hidden;
}

#slider .slider-items {
  position: relative;
}

#slider .slider-items .item {
  border-radius: 25px;
  height: 550px;
  border-radius: 15px;
  display: none;
  background: rgba(0, 0, 0, 0.3);
  position: relative;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

#slider .slider-items .item.show.from-left {
  -webkit-animation: appearingLeft 1s;
          animation: appearingLeft 1s;
}

#slider .slider-items .item.show.from-right {
  -webkit-animation: appearingRight 1s;
          animation: appearingRight 1s;
}

#slider .slider-items .item[data-item="1"] {
  background-image: url("../img/1.jpg");
}

#slider .slider-items .item[data-item="2"] {
  background-image: url("../img/2.jpg");
}

#slider .slider-items .item[data-item="3"] {
  background-image: url("../img/3.jpg");
}

#slider .slider-items .item[data-item="4"] {
  background-image: url("../img/4.jpg");
}

#slider .slider-items .item[data-item="5"] {
  background-image: url("../img/5.jpg");
}

#slider .slider-items .item[data-item="6"] {
  background-image: url("../img/6.jpg");
}

#slider .slider-items .item[data-item="7"] {
  background-image: url("../img/7.jpg");
}

#slider .slider-items .item[data-item="8"] {
  background-image: url("../img/8.jpg");
}

#slider .slider-items .item[data-item="9"] {
  background-image: url("../img/9.jpg");
}

#slider .slider-items .item[data-item="10"] {
  background-image: url("../img/10.jpg");
}

#slider .control {
  position: absolute;
  top: 0;
  width: 70px;
  font-size: 3em;
  border-radius: 15px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 100%;
  z-index: 1;
}

#slider .control i {
  color: #91928D;
}

#slider .control:hover {
  background: rgba(0, 0, 0, 0.3);
  cursor: pointer;
}

#slider .control:hover i {
  color: #0493E5;
}

#slider .left {
  left: 0;
  border-bottom-right-radius: inherit;
  border-top-right-radius: inherit;
}

#slider .right {
  right: 0;
  border-bottom-left-radius: inherit;
  border-top-left-radius: inherit;
}

#slider .pages {
  bottom: -25px;
  position: absolute;
  width: 100%;
}

#slider .pages .wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 200px;
  margin: auto;
}

#slider .pages .wrapper .rect {
  -webkit-box-shadow: 0px 0px 2px 1px #000;
          box-shadow: 0px 0px 2px 1px #000;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: grey;
}

#slider .pages .wrapper .rect.active {
  background: #0493E5;
}

#slider .pages .wrapper .rect:hover {
  cursor: pointer;
}

@media only screen and (max-width: 1199px) {
  #slider .slider-items .item {
    height: 500px;
  }
}

@media only screen and (max-width: 991px) {
  #slider {
    width: 80%;
  }

  #slider .slider-items .item {
    height: 400px;
  }

  #slider .control {
    width: 50px;
  }

  #slider .control {
    font-size: 2em;
  }
}

@media only screen and (max-width: 767px) {
  #slider {
    width: 90%;
  }

  #slider .slider-items .item {
    height: 300px;
  }

  #slider .slider-items .item {
    border-radius: 10px;
  }

  #slider .control {
    width: 45px;
  }

  #slider .control {
    font-size: 1.5em;
  }

  #slider .control {
    border-radius: 10px;
  }

  #slider .pages .wrapper .rect {
    width: 10px;
  }

  #slider .pages .wrapper .rect {
    height: 10px;
  }
}

@media only screen and (max-width: 576px) {
  #slider {
    width: 95%;
  }

  #slider .slider-items .item {
    height: 250px;
  }

  #slider .slider-items .item {
    border-radius: 10px;
  }

  #slider .control {
    width: 35px;
  }

  #slider .control {
    font-size: 1.1em;
  }

  #slider .control {
    border-radius: 10px;
  }

  #slider .pages .wrapper .rect {
    width: 8px;
  }

  #slider .pages .wrapper .rect {
    height: 8px;
  }
}

@media only screen and (max-width: 320px) {
  #slider {
    width: 95%;
  }

  #slider .slider-items .item {
    border-radius: 10px;
  }

  #slider .control {
    width: 30px;
  }

  #slider .control {
    font-size: 1em;
  }

  #slider .control {
    border-radius: 10px;
  }

  #slider .pages .wrapper .rect {
    width: 8px;
  }

  #slider .pages .wrapper .rect {
    height: 8px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJhbGwuY3NzIiwiX21peGluX21lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQ2lGRSxTQUFTO0VEOUJQLFVBQUE7RUFtQkgsU0FBRTtFQ2NELGVEYlk7RUNjWixhRGJTO0VBRVYsd0JBQUk7QUNhTDs7QUFFQSxnREFBZ0Q7O0FBRWhEOzs7Ozs7Ozs7OztFREpDLGNBQVk7QUNnQmI7O0FBRUE7O0VBRUUsZ0JEM0JLO0FDNEJQOztBQUVBO0VBQ0UsZ0JEM0JpQztBQzRCbkM7O0FBRUE7RURsQ0EsOEJBUUM7VUFSRCxzQkFRQztBQzRCRDs7QUFFQTtFRHRDQTtJQWVFLFdBQVU7SUFmWixZQWNDO0VDNEJDOztFQUVBO0lBQ0UsT0R2QkQ7SUN3QkMsVUR2QkQ7RUN3QkQ7QUFDRjs7QUEwQkE7RUFDRTtJRDNFRixXQWNDO0lDK0RHLFlEeENEO0VDeUNEOztFQUVBO0lBQ0UsT0R0Q0Q7SUEzQ0gsVUFjQztFQ3FFQztBQUNGOztBQUVBO0VBQ0U7SUR2RkYsWUFjQztJQzJFRyxZRGxDRDtFQ21DRDs7RUFFQTtJQUNFLFFEaENEO0lBN0RILFVBY0M7RUNpRkM7QUFDRjs7QUEwQkE7RUFDRTtJQUNFLFlDNUxJO0lBOEd3QixZQUFZO0VEZ0YxQzs7RUFFQTtJQUNFLFFEaklKO0lDa0lJLFVDbE1JO0VEbU1OO0FBQ0Y7O0FBRUE7RUFDRSxpQkRuRUQ7RUNvRUMsVUN4TU07RUR5TU4sWUMzRm9DO0VENEZwQyxZRHRFRDtBQ3VFRDs7QUFFQTtFQUNFLGtCRDFFTztBQzJFVDs7QUFFQTtFQUNFLGdCRDVMTztBQzZMVDs7QUFFQTtFQUNFLGtCRHZERztBQ3dETDs7QUFFQTtFQUNFLG1CRHRERztFQXBHTCxhQXNHQztFQ3NEQyxtQkRyRGE7RUNzRGIsYURyRFU7RUNzRFYsOEJEL0JBO0VDZ0NBLGtCRHJEQTtFQ3NEQSxzQkRyRGM7RUNzRGQsNEJEckRrQjtFQ3NEbEIsNEJEckRhO0FDc0RmOztBQUVBO0VBQ0UsbUNEcERvQjtVQ29EcEIsMkJEcERvQjtBQ3FEdEI7O0FBRUE7RUFDRSxvQ0M1SGdEO1VENEhoRCw0QkM1SGdEO0FENkhsRDs7QUFFQTtFQUNFLHFDRC9ETTtBQ2dFUjs7QUFFQTtFQUNFLHFDRHJERTtBQ3NESjs7QUFFQTtFQUNFLHFDQ3hJc0Q7QUR5SXhEOztBQUVBO0VBQ0UscUNEM0VNO0FDNEVSOztBQUVBO0VBQ0UscUNEL0VNO0FDZ0ZSOztBQUVBO0VBQ0UscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0Usc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixXQUFXO0VBQ1gsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixvQkFBYTtFQUFiLG9CQUFhO0VBQWIsYUFBYTtFQUNiLHlCQUFtQjtNQUFuQixzQkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLHdCQUF1QjtNQUF2QixxQkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsT0FBTztFQUNQLG1DQUFtQztFQUNuQyxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxRQUFRO0VBQ1Isa0NBQWtDO0VBQ2xDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBO0VBQ0Usb0JBQWE7RUFBYixvQkFBYTtFQUFiLGFBQWE7RUFDYix5QkFBNkI7TUFBN0IsNkJBQTZCO0VBQzdCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx3Q0FBZ0M7VUFBaEMsZ0NBQWdDO0VBQ2hDLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRTtJQUNFLGFBQWE7RUFDZjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLFlBQVk7RUFDZDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLFdBQVc7RUFDYjtBQUNGIiwiZmlsZSI6ImFsbC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHRmb250OiBpbmhlcml0O1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbntcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbm9sLCB1bCB7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5ib2R5e1xuXHRtaW4td2lkdGg6IDMyMHB4O1xufVxuKntcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuJGwtZ3JleTogIzkxOTI4RDtcbiRsLWRhcms6IHJnYmEoMCwwLDAsMC4zKTtcbiRsLWJsdWU6ICMwNDkzRTU7XG4kcmFkaXVzOiAoYWxsOiAxNXB4LCB4czogMTBweCwgc206IDEwcHgsIG1kOiAxMHB4KTtcblxuQGltcG9ydCAnbWl4aW5fbWVkaWEnO1xuXHRcdFxuQG1peGluIGtleWZyYW1lcygkYW5pbWF0aW9uTmFtZSlcbntcbiAgICBALXdlYmtpdC1rZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG4gICAgQC1tb3ota2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9ICB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBALW8ta2V5ZnJhbWVzICN7JGFuaW1hdGlvbk5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgI3skYW5pbWF0aW9uTmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBpbmNsdWRlIGtleWZyYW1lcyhhcHBlYXJpbmdMZWZ0KSB7XG5cdDAlIHtcblx0XHRsZWZ0OiAtMTVweDtcblx0XHRvcGFjaXR5OiAwLjc7XG5cdH1cblx0MTAwJSB7XG5cdFx0bGVmdDogMDtcblx0XHRvcGFjaXR5OiAxO1xuXHR9XG59XG5AaW5jbHVkZSBrZXlmcmFtZXMoYXBwZWFyaW5nUmlnaHQpIHtcblx0MCUge1xuXHRcdHJpZ2h0OiAtMTVweDtcblx0XHRvcGFjaXR5OiAwLjc7XG5cdH1cblx0MTAwJSB7XG5cdFx0cmlnaHQ6IDA7XG5cdFx0b3BhY2l0eTogMTtcblx0fVxufVxuXG4jc2xpZGVye1xuXHRwYWRkaW5nLXRvcDogMTBweDtcblx0d2lkdGg6IDcwJTtcblx0QGluY2x1ZGUgbWVkaWEoKFxuXHRcdHdpZHRoOiAoeHM6IDk1JSwgc206IDk1JSwgbWQ6IDkwJSwgbGc6IDgwJSlcblx0KSk7XG5cdGhlaWdodDogYXV0bztcblx0bWFyZ2luOiBhdXRvO1xuXHQuc2xpZGVyLWNvbnRhaW5lcntcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdH1cblx0LnNsaWRlci1ib2R5e1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdH1cblx0LnNsaWRlci1pdGVtc3tcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0Lml0ZW17XG5cdFx0XHRib3JkZXItcmFkaXVzOiAyNXB4O1xuXHRcdFx0QGluY2x1ZGUgbWVkaWEoKFxuXHRcdFx0XHRoZWlnaHQ6IChhbGw6IDU1MHB4LCBzbTogMjUwcHgsIG1kOiAzMDBweCAsIGxnOiA0MDBweCwgeGw6IDUwMHB4KSxcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogJHJhZGl1c1xuXHRcdFx0KSk7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdFx0YmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjMpO1xuXHRcdFx0Ly8gd2lkdGg6IDk1MHB4XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXHRcdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0XHRcdGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG5cdFx0XHQmLnNob3cuZnJvbS1sZWZ0e1xuXHRcdFx0XHRhbmltYXRpb246IGFwcGVhcmluZ0xlZnQgMXM7XG5cdFx0XHR9XG5cdFx0XHQmLnNob3cuZnJvbS1yaWdodHtcblx0XHRcdFx0YW5pbWF0aW9uOiBhcHBlYXJpbmdSaWdodCAxcztcblx0XHRcdH1cblx0XHR9XG5cdFx0Lml0ZW1bZGF0YS1pdGVtPVwiMVwiXXtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy8xLmpwZ1wiKTtcblx0XHR9XG5cdFx0Lml0ZW1bZGF0YS1pdGVtPVwiMlwiXXtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy8yLmpwZ1wiKTtcblx0XHR9XHRcblx0XHQuaXRlbVtkYXRhLWl0ZW09XCIzXCJde1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzMuanBnXCIpO1xuXHRcdH1cdFxuXHRcdC5pdGVtW2RhdGEtaXRlbT1cIjRcIl17XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvNC5qcGdcIik7XG5cdFx0fVx0XG5cdFx0Lml0ZW1bZGF0YS1pdGVtPVwiNVwiXXtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy81LmpwZ1wiKTtcblx0XHR9XHRcblx0XHQuaXRlbVtkYXRhLWl0ZW09XCI2XCJde1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzYuanBnXCIpO1xuXHRcdH1cdFxuXHRcdC5pdGVtW2RhdGEtaXRlbT1cIjdcIl17XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvNy5qcGdcIik7XG5cdFx0fVxuXHRcdC5pdGVtW2RhdGEtaXRlbT1cIjhcIl17XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvOC5qcGdcIik7XG5cdFx0fVxuXHRcdC5pdGVtW2RhdGEtaXRlbT1cIjlcIl17XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvOS5qcGdcIik7XG5cdFx0fVxuXHRcdC5pdGVtW2RhdGEtaXRlbT1cIjEwXCJde1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzEwLmpwZ1wiKTtcblx0XHR9XHRcblx0XHRcblx0fVxuXHQuY29udHJvbHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiAwO1xuXHRcdEBpbmNsdWRlIG1lZGlhKChcblx0XHRcdFx0d2lkdGg6IChhbGw6IDcwcHgsIHhzOiAzMHB4LCBzbTogMzVweCwgbWQ6IDQ1cHgsIGxnOiA1MHB4KSxcblx0XHRcdFx0Zm9udC1zaXplOiAoYWxsOiAzZW0sIHhzOiAxZW0sIHNtOiAxLjFlbSwgbWQ6IDEuNWVtLCBsZzogMmVtKSxcblx0XHRcdFx0Ym9yZGVyLXJhZGl1czogJHJhZGl1c1xuXHRcdFx0KSk7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHR6LWluZGV4OiAxO1xuXHRcdGl7XG5cdFx0XHRjb2xvcjogJGwtZ3JleTtcblx0XHR9XG5cdFx0Jjpob3Zlcntcblx0XHRcdGJhY2tncm91bmQ6ICRsLWRhcms7XG5cdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0XHRpe1xuXHRcdFx0XHRjb2xvcjogJGwtYmx1ZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0LmxlZnR7XG5cdFx0bGVmdDogMDtcblx0XHRib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogaW5oZXJpdDtcbiAgICBcdGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBpbmhlcml0O1xuXHR9XG5cdC5yaWdodHtcblx0XHRyaWdodDogMDtcblx0XHRib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBpbmhlcml0O1xuICAgIFx0Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogaW5oZXJpdDtcblx0fVxuXHQucGFnZXN7XG5cdFx0Ym90dG9tOiAtMjVweDtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0LndyYXBwZXJ7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG5cdFx0XHR3aWR0aDogMjAwcHg7XG5cdFx0XHRtYXJnaW46IGF1dG87XG5cdFx0XHQucmVjdHtcblx0XHRcdFx0Ym94LXNoYWRvdzogMHB4IDBweCAycHggMXB4ICMwMDA7XG5cdFx0XHRcdEBpbmNsdWRlIG1lZGlhKChcblx0XHRcdFx0XHR3aWR0aDogKGFsbDogMTJweCwgeHM6IDhweCwgc206IDhweCwgbWQ6IDEwcHgpLFxuXHRcdFx0XHRcdGhlaWdodDogKGFsbDogMTJweCwgeHM6IDhweCwgc206IDhweCwgbWQ6MTBweClcblx0XHRcdFx0KSk7XG5cdFx0XHRcdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0XHRcdFx0YmFja2dyb3VuZDogZ3JleTtcblx0XHRcdFx0Ji5hY3RpdmV7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogJGwtYmx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHQmOmhvdmVye1xuXHRcdFx0XHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVx0XHRcdFxufVx0XG4iLCJodG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYm9keSB7XG4gIG1pbi13aWR0aDogMzIwcHg7XG59XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgYXBwZWFyaW5nTGVmdCB7XG4gIDAlIHtcbiAgICBsZWZ0OiAtMTVweDtcbiAgICBvcGFjaXR5OiAwLjc7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQC1tb3ota2V5ZnJhbWVzIGFwcGVhcmluZ0xlZnQge1xuICAwJSB7XG4gICAgbGVmdDogLTE1cHg7XG4gICAgb3BhY2l0eTogMC43O1xuICB9XG5cbiAgMTAwJSB7XG4gICAgbGVmdDogMDtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkAtby1rZXlmcmFtZXMgYXBwZWFyaW5nTGVmdCB7XG4gIDAlIHtcbiAgICBsZWZ0OiAtMTVweDtcbiAgICBvcGFjaXR5OiAwLjc7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBhcHBlYXJpbmdMZWZ0IHtcbiAgMCUge1xuICAgIGxlZnQ6IC0xNXB4O1xuICAgIG9wYWNpdHk6IDAuNztcbiAgfVxuXG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgYXBwZWFyaW5nUmlnaHQge1xuICAwJSB7XG4gICAgcmlnaHQ6IC0xNXB4O1xuICAgIG9wYWNpdHk6IDAuNztcbiAgfVxuXG4gIDEwMCUge1xuICAgIHJpZ2h0OiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQC1tb3ota2V5ZnJhbWVzIGFwcGVhcmluZ1JpZ2h0IHtcbiAgMCUge1xuICAgIHJpZ2h0OiAtMTVweDtcbiAgICBvcGFjaXR5OiAwLjc7XG4gIH1cblxuICAxMDAlIHtcbiAgICByaWdodDogMDtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkAtby1rZXlmcmFtZXMgYXBwZWFyaW5nUmlnaHQge1xuICAwJSB7XG4gICAgcmlnaHQ6IC0xNXB4O1xuICAgIG9wYWNpdHk6IDAuNztcbiAgfVxuXG4gIDEwMCUge1xuICAgIHJpZ2h0OiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBhcHBlYXJpbmdSaWdodCB7XG4gIDAlIHtcbiAgICByaWdodDogLTE1cHg7XG4gICAgb3BhY2l0eTogMC43O1xuICB9XG5cbiAgMTAwJSB7XG4gICAgcmlnaHQ6IDA7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG4jc2xpZGVyIHtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG4gIHdpZHRoOiA3MCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4jc2xpZGVyIC5zbGlkZXItY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4jc2xpZGVyIC5zbGlkZXItYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgaGVpZ2h0OiA1NTBweDtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgZGlzcGxheTogbm9uZTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbS5zaG93LmZyb20tbGVmdCB7XG4gIGFuaW1hdGlvbjogYXBwZWFyaW5nTGVmdCAxcztcbn1cblxuI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtLnNob3cuZnJvbS1yaWdodCB7XG4gIGFuaW1hdGlvbjogYXBwZWFyaW5nUmlnaHQgMXM7XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbVtkYXRhLWl0ZW09XCIxXCJdIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzEuanBnXCIpO1xufVxuXG4jc2xpZGVyIC5zbGlkZXItaXRlbXMgLml0ZW1bZGF0YS1pdGVtPVwiMlwiXSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy8yLmpwZ1wiKTtcbn1cblxuI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtW2RhdGEtaXRlbT1cIjNcIl0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvMy5qcGdcIik7XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbVtkYXRhLWl0ZW09XCI0XCJdIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzQuanBnXCIpO1xufVxuXG4jc2xpZGVyIC5zbGlkZXItaXRlbXMgLml0ZW1bZGF0YS1pdGVtPVwiNVwiXSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy81LmpwZ1wiKTtcbn1cblxuI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtW2RhdGEtaXRlbT1cIjZcIl0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvNi5qcGdcIik7XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbVtkYXRhLWl0ZW09XCI3XCJdIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzcuanBnXCIpO1xufVxuXG4jc2xpZGVyIC5zbGlkZXItaXRlbXMgLml0ZW1bZGF0YS1pdGVtPVwiOFwiXSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy84LmpwZ1wiKTtcbn1cblxuI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtW2RhdGEtaXRlbT1cIjlcIl0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvOS5qcGdcIik7XG59XG5cbiNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbVtkYXRhLWl0ZW09XCIxMFwiXSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy8xMC5qcGdcIik7XG59XG5cbiNzbGlkZXIgLmNvbnRyb2wge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDcwcHg7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAxO1xufVxuXG4jc2xpZGVyIC5jb250cm9sIGkge1xuICBjb2xvcjogIzkxOTI4RDtcbn1cblxuI3NsaWRlciAuY29udHJvbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4jc2xpZGVyIC5jb250cm9sOmhvdmVyIGkge1xuICBjb2xvcjogIzA0OTNFNTtcbn1cblxuI3NsaWRlciAubGVmdCB7XG4gIGxlZnQ6IDA7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiBpbmhlcml0O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogaW5oZXJpdDtcbn1cblxuI3NsaWRlciAucmlnaHQge1xuICByaWdodDogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogaW5oZXJpdDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogaW5oZXJpdDtcbn1cblxuI3NsaWRlciAucGFnZXMge1xuICBib3R0b206IC0yNXB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jc2xpZGVyIC5wYWdlcyAud3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB3aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuI3NsaWRlciAucGFnZXMgLndyYXBwZXIgLnJlY3Qge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAxcHggIzAwMDtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kOiBncmV5O1xufVxuXG4jc2xpZGVyIC5wYWdlcyAud3JhcHBlciAucmVjdC5hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMDQ5M0U1O1xufVxuXG4jc2xpZGVyIC5wYWdlcyAud3JhcHBlciAucmVjdDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpIHtcbiAgI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgICBoZWlnaHQ6IDUwMHB4O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgI3NsaWRlciB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuXG4gICNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbSB7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgfVxuXG4gICNzbGlkZXIgLmNvbnRyb2wge1xuICAgIHdpZHRoOiA1MHB4O1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgZm9udC1zaXplOiAyZW07XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAjc2xpZGVyIHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG5cbiAgI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG5cbiAgI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgd2lkdGg6IDQ1cHg7XG4gIH1cblxuICAjc2xpZGVyIC5jb250cm9sIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuXG4gICNzbGlkZXIgLnBhZ2VzIC53cmFwcGVyIC5yZWN0IHtcbiAgICB3aWR0aDogMTBweDtcbiAgfVxuXG4gICNzbGlkZXIgLnBhZ2VzIC53cmFwcGVyIC5yZWN0IHtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzZweCkge1xuICAjc2xpZGVyIHtcbiAgICB3aWR0aDogOTUlO1xuICB9XG5cbiAgI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICB9XG5cbiAgI3NsaWRlciAuc2xpZGVyLWl0ZW1zIC5pdGVtIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgd2lkdGg6IDM1cHg7XG4gIH1cblxuICAjc2xpZGVyIC5jb250cm9sIHtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuXG4gICNzbGlkZXIgLnBhZ2VzIC53cmFwcGVyIC5yZWN0IHtcbiAgICB3aWR0aDogOHB4O1xuICB9XG5cbiAgI3NsaWRlciAucGFnZXMgLndyYXBwZXIgLnJlY3Qge1xuICAgIGhlaWdodDogOHB4O1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgI3NsaWRlciB7XG4gICAgd2lkdGg6IDk1JTtcbiAgfVxuXG4gICNzbGlkZXIgLnNsaWRlci1pdGVtcyAuaXRlbSB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuXG4gICNzbGlkZXIgLmNvbnRyb2wge1xuICAgIHdpZHRoOiAzMHB4O1xuICB9XG5cbiAgI3NsaWRlciAuY29udHJvbCB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cblxuICAjc2xpZGVyIC5jb250cm9sIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG5cbiAgI3NsaWRlciAucGFnZXMgLndyYXBwZXIgLnJlY3Qge1xuICAgIHdpZHRoOiA4cHg7XG4gIH1cblxuICAjc2xpZGVyIC5wYWdlcyAud3JhcHBlciAucmVjdCB7XG4gICAgaGVpZ2h0OiA4cHg7XG4gIH1cbn0iLCIvLyBodHRwczovL2hhYnIuY29tL3J1L3Bvc3QvMzUyNjg2L1xyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vRG9sZ2lrODkvLW1lZGlhLXNjcmVlblxyXG5cclxuJGJyZWFrcG9pbnRzOiAoXHJcbiAgICAgICAgeGw6IDExOTksXHJcbiAgICAgICAgbGc6IDk5MSxcclxuICAgICAgICBtZDogNzY3LFxyXG4gICAgICAgIHNtOiA1NzYsXHJcbiAgICAgICAgeHM6IDMyMFxyXG4pICFkZWZhdWx0O1xyXG4kbWVkaWEtZGlyZWN0aW9uOiBtYXggIWRlZmF1bHQ7XHJcblxyXG5AbWl4aW4gY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbHVlKXtcclxuICAgIEBpZiB0eXBlX29mKCR2YWx1ZSkgPT0gc3RyaW5ne1xyXG4gICAgICAgICN7JHByb3BlcnR5fTogdW5xdW90ZSgkdmFsdWUpO1xyXG4gICAgfUBlbHNle1xyXG4gICAgICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AZnVuY3Rpb24gc3BsaXRTY3JlZW5zKCRzdHJpbmcsICRzZXBlcmF0b3Ipe1xyXG4gICAgJHN0cmluZzogaW5zcGVjdChxdW90ZSgkc3RyaW5nKSk7XHJcbiAgICAkc2VwSWQ6IHN0ci1pbmRleChxdW90ZSgkc3RyaW5nKSwgJHNlcGVyYXRvcik7XHJcbiAgICBAaWYoJHNlcElkKXtcclxuICAgICAgICAkYXJyYXk6IChxdW90ZShzdHItc2xpY2UoJHN0cmluZywgMCwgJHNlcElkIC0gMSkpLCBxdW90ZShzdHItc2xpY2UoJHN0cmluZywgJHNlcElkICsgMSkpKTtcclxuICAgICAgICBAcmV0dXJuICRhcnJheTtcclxuICAgIH1AZWxzZXtcclxuICAgICAgICBAcmV0dXJuICRzdHJpbmc7XHJcbiAgICB9XHJcbn1cclxuLy9AbWVkaWEgc2NyZWVuXHJcbkBtaXhpbiBtZWRpYSgkcHJvcGVydGllcywgJG9yaWVudGF0aW9uOiBmYWxzZSl7XHJcblxyXG4gICAgQGVhY2ggJHByb3BlcnR5LCAkdmFsdWUgaW4gJHByb3BlcnRpZXMge1xyXG4gICAgICAgIEBpZiB0eXBlX29mKCR2YWx1ZSkgPT0gJ21hcCcge1xyXG4gICAgICAgICAgICBAZWFjaCAkc2NyZWVuLCAkdmFsIGluICR2YWx1ZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NyZWVuOiBzcGxpdFNjcmVlbnMoJHNjcmVlbiwgJy0nKTtcclxuICAgICAgICAgICAgICAgIEBpZiB0eXBlX29mKCRzY3JlZW4pID09ICdsaXN0J3tcclxuICAgICAgICAgICAgICAgICAgICAkbWluX3NjcmVlbjogbnRoKCRzY3JlZW4sIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICRtYXhfc2NyZWVuOiBudGgoJHNjcmVlbiwgMik7XHJcbiAgICAgICAgICAgICAgICAgICAgQGlmICRtaW5fc2NyZWVuID09IG1pbiBvciAkbWluX3NjcmVlbiA9PSBtYXh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRtZWRpYS1kaXJlY3Rpb246ICRtaW5fc2NyZWVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBAaWYgJG9yaWVudGF0aW9uIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWF4X3NjcmVlbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoI3skbWVkaWEtZGlyZWN0aW9ufS13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRtYXhfc2NyZWVuKSArICdweCcpIGFuZCAob3JpZW50YXRpb246ICRvcmllbnRhdGlvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1AZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiAkbWF4X3NjcmVlbiArICdweCcpICBhbmQgKG9yaWVudGF0aW9uOiAkb3JpZW50YXRpb24pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjc3NfcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgICRtYXhfc2NyZWVuKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1heF9zY3JlZW4pICsgJ3B4Jyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1AZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiAkbWF4X3NjcmVlbiArICdweCcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAkb3JpZW50YXRpb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgICRtaW5fc2NyZWVuKSBhbmQgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAgJG1heF9zY3JlZW4pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRtaW5fc2NyZWVuKSArICdweCcpIGFuZCAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1heF9zY3JlZW4pICsgJ3B4JykgYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWluX3NjcmVlbikgYW5kIG5vdCBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWF4X3NjcmVlbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1pbl9zY3JlZW4pICsgJ3B4JykgYW5kIChtYXgtd2lkdGg6ICRtYXhfc2NyZWVuICsgJ3B4JykgYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSBpZiBub3QgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAgJG1pbl9zY3JlZW4pIGFuZCBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWF4X3NjcmVlbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluX3NjcmVlbiArICdweCcpIGFuZCAobWF4LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1heF9zY3JlZW4pICsgJ3B4JykgYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluX3NjcmVlbiArICdweCcpIGFuZCAobWF4LXdpZHRoOiAkbWF4X3NjcmVlbiArICdweCcpIGFuZCAob3JpZW50YXRpb246ICRvcmllbnRhdGlvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAgJG1pbl9zY3JlZW4pIGFuZCBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWF4X3NjcmVlbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1pbl9zY3JlZW4pICsgJ3B4JykgYW5kIChtYXgtd2lkdGg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbWF4X3NjcmVlbikgKyAncHgnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWluX3NjcmVlbikgYW5kIG5vdCBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICAkbWF4X3NjcmVlbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG1pbl9zY3JlZW4pICsgJ3B4JykgYW5kIChtYXgtd2lkdGg6ICRtYXhfc2NyZWVuICsgJ3B4Jyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gQGVsc2UgaWYgbm90IG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgICRtaW5fc2NyZWVuKSBhbmQgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAgJG1heF9zY3JlZW4pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbl9zY3JlZW4gKyAncHgnKSBhbmQgKG1heC13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRtYXhfc2NyZWVuKSArICdweCcpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjc3NfcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtaW5fc2NyZWVuICsgJ3B4JykgYW5kIChtYXgtd2lkdGg6ICRtYXhfc2NyZWVuICsgJ3B4Jyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1AZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICBAaWYgJHNjcmVlbiA9PSAncHJpbnQnIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhIHByaW50e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQGlmICRvcmllbnRhdGlvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkc2NyZWVuKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHNjcmVlbikgKyAncHgnKSBhbmQgKG9yaWVudGF0aW9uOiAkb3JpZW50YXRpb24pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjc3NfcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgJHNjcmVlbiA9PSBhbGwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjc3NfcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiAkc2NyZWVuICsgJ3B4JykgYW5kIChvcmllbnRhdGlvbjogJG9yaWVudGF0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBjc3NfcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkc2NyZWVuKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgjeyRtZWRpYS1kaXJlY3Rpb259LXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHNjcmVlbikgKyAncHgnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmICRzY3JlZW4gPT0gYWxsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKCN7JG1lZGlhLWRpcmVjdGlvbn0td2lkdGg6ICRzY3JlZW4gKyAncHgnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNzc19wcm9wZXJ0eSgkcHJvcGVydHksICR2YWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgICAgIEBpZiAkcHJvcGVydHkgPT0gJ2V4dGVuZCcge1xyXG4gICAgICAgICAgICAgICAgQGV4dGVuZCAje3VucXVvdGUoJHZhbHVlKX0gIW9wdGlvbmFsO1xyXG4gICAgICAgICAgICB9QGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgY3NzX3Byb3BlcnR5KCRwcm9wZXJ0eSwgJHZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTsiXX0= */
